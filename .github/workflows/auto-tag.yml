name: Auto Tag on Push

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - 'README.md'
      - '.gitignore'

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get latest tag
        id: get_tag
        run: |
          # Get the latest tag, or use v0.0.0 if no tags exist
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT
          
          # Extract version numbers
          VERSION=${LATEST_TAG#v}
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          
          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="v${MAJOR}.${MINOR}.${NEW_PATCH}"
          
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Previous version: $LATEST_TAG"
          echo "New version: $NEW_VERSION"
      
      - name: Update addon.xml version
        run: |
          VERSION="${{ steps.get_tag.outputs.NEW_VERSION }}"
          VERSION_NUMBER="${VERSION#v}"
          
          # Update version in addon.xml
          sed -i "s/version=\"[0-9]*\.[0-9]*\.[0-9]*\"/version=\"$VERSION_NUMBER\"/" plugin.video.nextgenrt/addon.xml
          
          # Show the change
          echo "Updated addon.xml version to $VERSION_NUMBER"
      
      - name: Commit version update
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add plugin.video.nextgenrt/addon.xml
          git commit -m "chore: bump version to ${{ steps.get_tag.outputs.NEW_VERSION }}" || echo "No changes to commit"
          git push || echo "No changes to push"
      
      - name: Create and push tag
        run: |
          git tag ${{ steps.get_tag.outputs.NEW_VERSION }}
          git push origin ${{ steps.get_tag.outputs.NEW_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
