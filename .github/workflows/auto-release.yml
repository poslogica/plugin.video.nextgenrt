name: Auto Version and Release

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/**'
      - '.gitignore'

jobs:
  auto-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Get latest tag
        id: get_tag
        run: |
          # Get the latest tag, or use v0.0.0 if no tags exist
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "LATEST_TAG=$LATEST_TAG" >> $GITHUB_OUTPUT
          
          # Extract version numbers
          VERSION=${LATEST_TAG#v}
          MAJOR=$(echo $VERSION | cut -d. -f1)
          MINOR=$(echo $VERSION | cut -d. -f2)
          PATCH=$(echo $VERSION | cut -d. -f3)
          
          # Increment patch version
          NEW_PATCH=$((PATCH + 1))
          NEW_VERSION="v${MAJOR}.${MINOR}.${NEW_PATCH}"
          
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "Previous version: $LATEST_TAG"
          echo "New version: $NEW_VERSION"
      
      - name: Update addon.xml version and news
        run: |
          VERSION="${{ steps.get_tag.outputs.NEW_VERSION }}"
          VERSION_NUMBER="${VERSION#v}"
          LATEST_TAG="${{ steps.get_tag.outputs.LATEST_TAG }}"
          CURRENT_DATE=$(date +%Y-%m-%d)
          
          # Get commit messages since last tag
          if [ "$LATEST_TAG" != "v0.0.0" ]; then
            COMMIT_MESSAGES=$(git log ${LATEST_TAG}..HEAD --pretty=format:"- %s" | grep -v "^- chore: bump version" || echo "- Minor updates and improvements")
          else
            COMMIT_MESSAGES="- Initial release"
          fi
          
          # Create news entry
          NEWS_ENTRY="[B]NextGen RT News ChangeLog $VERSION - $CURRENT_DATE[/B]\n$COMMIT_MESSAGES"
          
          # Update version in addon.xml
          sed -i "s/version=\"[0-9]*\.[0-9]*\.[0-9]*\"/version=\"$VERSION_NUMBER\"/" plugin.video.nextgenrt/addon.xml
          
          # Update news section in addon.xml (replace content between <news> tags)
          # Using perl for better multi-line handling
          perl -i -0pe "s|<news>.*?</news>|<news>$NEWS_ENTRY\n\t\t</news>|s" plugin.video.nextgenrt/addon.xml
          
          # Show the changes
          echo "Updated addon.xml version to $VERSION_NUMBER"
          echo "Updated news section with latest changes"
      
      - name: Commit version update
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add plugin.video.nextgenrt/addon.xml
          git commit -m "chore: bump version to ${{ steps.get_tag.outputs.NEW_VERSION }}" || echo "No changes to commit"
          git push || echo "No changes to push"
      
      - name: Create and push tag
        run: |
          git tag ${{ steps.get_tag.outputs.NEW_VERSION }}
          git push origin ${{ steps.get_tag.outputs.NEW_VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create plugin zip
        run: |
          zip -r plugin.video.nextgenrt-${{ steps.get_tag.outputs.NEW_VERSION }}.zip plugin.video.nextgenrt
      
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.get_tag.outputs.NEW_VERSION }}
          name: NextGen RT News ${{ steps.get_tag.outputs.NEW_VERSION }}
          files: plugin.video.nextgenrt-${{ steps.get_tag.outputs.NEW_VERSION }}.zip
          body: |
            ## NextGen RT News ${{ steps.get_tag.outputs.NEW_VERSION }}
            
            ### Installation
            1. Download the `plugin.video.nextgenrt-${{ steps.get_tag.outputs.NEW_VERSION }}.zip` file below
            2. In Kodi, go to Settings → Add-ons → Install from zip file
            3. Select the downloaded zip file
            4. The plugin will automatically install InputStream Adaptive if needed
            
            ### What's Changed
            See the [README](https://github.com/poslogica/plugin.video.nextgenrt/blob/main/README.md) for full details.
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
